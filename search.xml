<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二分学习笔记</title>
      <link href="/%E4%BA%8C%E5%88%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
      <url>/%E4%BA%8C%E5%88%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h1><p>在一段单调的序列上查找一个数，可以采用折半的方法，每次将查找的范围缩小一半</p><h2 id="模板："><a href="#模板：" class="headerlink" title="模板："></a>模板：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">l=<span class="number">1</span>,r=n;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=a[mid]) r=mid<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;l&lt;&lt;endl;</span><br></pre></td></tr></table></figure><p>查找的复杂度为$ \mathcal{O}(\text{log}n)$</p><h2 id="STL函数："><a href="#STL函数：" class="headerlink" title="STL函数："></a>STL函数：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">lower_bound</span>(first,last,val);<span class="comment">//first,last及返回值都为迭代器,可在最后加比较器</span></span><br></pre></td></tr></table></figure><p>在非递减区间[first,last)中进行二分查找，返回大于或等于val的第一个元素位置。如果所有元素都小于val，则返回last的位置。</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">upper_bound</span>(first,last,val);<span class="comment">//first,last及返回值都为迭代器,可在最后加比较器</span></span><br></pre></td></tr></table></figure><p>在非递减区间[first,last)中进行二分查找，返回大于val的第一个元素位置。如果所有元素都小于val，则返回last的位置。</p><h1 id="二分答案"><a href="#二分答案" class="headerlink" title="二分答案"></a>二分答案</h1><h2 id="适用二分答案的条件："><a href="#适用二分答案的条件：" class="headerlink" title="适用二分答案的条件："></a>适用二分答案的条件：</h2><ol><li>最优解满足单调性</li><li>最优解满足有界性</li></ol><p>即：</p><p>对于$[a,b]$区间内的最优解$x_0,$满足：</p><p>$\forall x_1&lt;x_0 ,x_1$均为次优解，$\forall x_2&gt;x_0,x_2 $均为不可行解。</p><h2 id="模板：-1"><a href="#模板：-1" class="headerlink" title="模板："></a>模板：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123; </span><br><span class="line">mid=(l+r)/<span class="number">2</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">sol</span>(mid)) r=mid<span class="number">-1</span>; </span><br><span class="line"><span class="keyword">else</span> l=mid+<span class="number">1</span>; </span><br><span class="line">&#125; </span><br><span class="line">cout&lt;&lt;l&lt;&lt;endl;</span><br></pre></td></tr></table></figure><p>大部分二分答案的题目的框架是不变的，变化的只有两个部分：</p><ol><li><p>$sol$ 函数：根据每个题目写出具体的判断函数</p></li><li><p><strong>最终答案</strong>：需要具体判断</p><p>当 $l&#x3D;&#x3D;r$ 的时候，判断最终答案是 $l$ 还是 $l-1$</p></li></ol><p>一般来说，二分答案的题目的解很难直接求出，但很容易判断一个解是否可行</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高精度模板</title>
      <link href="/%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%A8%A1%E6%9D%BF.html"/>
      <url>/%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<h1 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h1><p><a href="https://www.luogu.com.cn/problem/P1601">P1601 A+B Problem（高精）</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">qmax</span><span class="params">(T &amp;x,<span class="type">const</span> T &amp;y)</span></span>&#123;<span class="keyword">if</span>(x&lt;y) x=y;&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l1,l2,l;</span><br><span class="line">string s1,s2;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">505</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> l)</span></span>&#123;        <span class="comment">//翻转</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=l/<span class="number">2</span>;i++) <span class="built_in">swap</span>(a[x][i],a[x][l-i+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">max</span>(l1,l2);i++)&#123;</span><br><span class="line">a[<span class="number">0</span>][i]+=a[<span class="number">1</span>][i]+a[<span class="number">2</span>][i];</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>][i]&gt;=<span class="number">10</span>) a[<span class="number">0</span>][i+<span class="number">1</span>]+=a[<span class="number">0</span>][i]/<span class="number">10</span>,a[<span class="number">0</span>][i]%=<span class="number">10</span>,l=i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">qmax</span>(l,<span class="built_in">max</span>(l1,l2));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line">cin&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++) a[<span class="number">1</span>][++l1]=s1[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s2.<span class="built_in">size</span>();i++) a[<span class="number">2</span>][++l2]=s2[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="built_in">reverse</span>(<span class="number">1</span>,l1),<span class="built_in">reverse</span>(<span class="number">2</span>,l2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">add</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=l;i&gt;=<span class="number">1</span>;i--) cout&lt;&lt;a[<span class="number">0</span>][i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h1><p><a href="https://www.luogu.com.cn/problem/P1303">P1303 A*B Problem</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">qmax</span><span class="params">(T &amp;x,<span class="type">const</span> T &amp;y)</span></span>&#123;<span class="keyword">if</span>(x&lt;y) x=y;&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l1,l2,l;</span><br><span class="line">string s1,s2;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">5005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> l)</span></span>&#123;        <span class="comment">//·­×ª</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=l/<span class="number">2</span>;i++) <span class="built_in">swap</span>(a[x][i],a[x][l-i+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Plus</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=l1;i++) </span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=l2;j++) a[<span class="number">0</span>][i+j<span class="number">-1</span>]+=a[<span class="number">1</span>][i]*a[<span class="number">2</span>][j];</span><br><span class="line"></span><br><span class="line">l=l1+l2+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=l;i++) </span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>][i]&gt;=<span class="number">10</span>) a[<span class="number">0</span>][i+<span class="number">1</span>]+=a[<span class="number">0</span>][i]/<span class="number">10</span>,a[<span class="number">0</span>][i]%=<span class="number">10</span>,<span class="built_in">qmax</span>(l,i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(i=l;i&gt;=<span class="number">1</span>;i--) </span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>][l]==<span class="number">0</span>) l=i<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line">cin&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++) a[<span class="number">1</span>][++l1]=s1[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s2.<span class="built_in">size</span>();i++) a[<span class="number">2</span>][++l2]=s2[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="built_in">reverse</span>(<span class="number">1</span>,l1),<span class="built_in">reverse</span>(<span class="number">2</span>,l2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Plus</span>();</span><br><span class="line"><span class="keyword">if</span>(l==<span class="number">0</span>) cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">for</span>(i=l;i&gt;=<span class="number">1</span>;i--) cout&lt;&lt;a[<span class="number">0</span>][i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="高精度除法"><a href="#高精度除法" class="headerlink" title="高精度除法"></a>高精度除法</h1><p><a href="https://www.luogu.com.cn/problem/P1480">P1480 A&#x2F;B Problem</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">qmax</span><span class="params">(T &amp;x,<span class="type">const</span> T &amp;y)</span></span>&#123;<span class="keyword">if</span>(x&lt;y) x=y;&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l1,l;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> x;</span><br><span class="line">string s1;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[<span class="number">5005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span> l)</span></span>&#123;        <span class="comment">//翻转</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=l/<span class="number">2</span>;i++) <span class="built_in">swap</span>(a[i],a[l-i+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Div</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l1;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">a[i<span class="number">-1</span>]+=(a[i]-(a[i]/x)*x)*<span class="number">10</span>,a[i]/=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line">cin&gt;&gt;s1&gt;&gt;x;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++) a[++l1]=s1[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="built_in">reverse</span>(l1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Div</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=l1;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line"><span class="keyword">if</span>(a[i]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">1</span>) cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">for</span>(l1=i;i&gt;=<span class="number">1</span>;i--) cout&lt;&lt;a[i]; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高精度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针学习笔记</title>
      <link href="/%E5%8F%8C%E6%8C%87%E9%92%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
      <url>/%E5%8F%8C%E6%8C%87%E9%92%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<p>使用两个指针维护一段序列区间</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用STL函数</title>
      <link href="/%E5%B8%B8%E7%94%A8STL%E5%87%BD%E6%95%B0.html"/>
      <url>/%E5%B8%B8%E7%94%A8STL%E5%87%BD%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-标准模板库-STL-之Vector容器"><a href="#C-标准模板库-STL-之Vector容器" class="headerlink" title="C++标准模板库(STL)之Vector容器:"></a>C++标准模板库(STL)之Vector容器:</h1><p>是一种顺序容器，事实上和数组差不多，但它比数组更优越。一般来说数组不能<strong>动态</strong>拓展，因此在程序运行的时候不是浪费内存，就是造成越界。而vector正好弥补了这个缺陷，它的特征是相当于可分配拓展的数组，它的随机访问快，在末端插入和删除快，在中间插入和删除慢。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">v.<span class="built_in">push_back</span>(t)  <span class="comment">//在数组的最后添加一个值为t的元素</span></span><br><span class="line">v.<span class="built_in">pop_back</span>()  <span class="comment">//去掉数组的最后一个数据 </span></span><br><span class="line">v.<span class="built_in">front</span>() 　　　<span class="comment">//返回第一个元素</span></span><br><span class="line">v.<span class="built_in">back</span>()    <span class="comment">//返回最后一个元素</span></span><br><span class="line">v.<span class="built_in">begin</span>()    <span class="comment">//得到数组头的指针，用迭代器接受</span></span><br><span class="line">v.<span class="built_in">end</span>()     <span class="comment">//得到数组的最后一个单元+1的指针，用迭代器接受</span></span><br><span class="line">v.<span class="built_in">clear</span>()    <span class="comment">// 移除容器中所有数据</span></span><br><span class="line">v.<span class="built_in">empty</span>()    <span class="comment">//判断容器是否为空吗，如果为空，则返回true 。</span></span><br><span class="line">v.<span class="built_in">erase</span>(pos)  <span class="comment">//删除pos位置的数据</span></span><br><span class="line">v.<span class="built_in">erase</span>(beg,end)<span class="comment">// 删除[beg,end)区间的数据</span></span><br><span class="line">v.<span class="built_in">size</span>()     <span class="comment">//回容器中实际数据的个数</span></span><br><span class="line">v.<span class="built_in">insert</span>(pos,data) <span class="comment">//在pos处插入数据</span></span><br><span class="line">v[n]        <span class="comment">//返回 v中位置为 n的元素。</span></span><br><span class="line">v.<span class="built_in">at</span>(n)     <span class="comment">// 返回 v中位置为 n的元素</span></span><br></pre></td></tr></table></figure><h1 id="C-标准模板库-STL-之Set容器"><a href="#C-标准模板库-STL-之Set容器" class="headerlink" title="C++标准模板库(STL)之Set容器:"></a>C++标准模板库(STL)之Set容器:</h1><p>关于set，必须说明的是set关联式容器。set作为一个容器也是用来存储同一数据类型的数据类型，并且能从一个数据集合中取出数据，在set中每个元素的值都唯一，而且系统能根据元素的值自动进行排序。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s.<span class="built_in">begin</span>()     <span class="comment">//返回指向第一个元素的迭代器</span></span><br><span class="line">s.<span class="built_in">end</span>()      <span class="comment">//返回指向最后一个元素之后的迭代器，不是最后一个元素</span></span><br><span class="line">s.<span class="built_in">clear</span>()     <span class="comment">//清除所有元素   O(n)</span></span><br><span class="line">s.<span class="built_in">count</span>()     <span class="comment">//返回某个值元素的个数O(logn)</span></span><br><span class="line">s.<span class="built_in">empty</span>()    <span class="comment">//如果集合为空，返回true</span></span><br><span class="line">s.<span class="built_in">erase</span>()     <span class="comment">//删除集合中的元素O(logn)</span></span><br><span class="line">s.<span class="built_in">find</span>()      <span class="comment">//返回一个指向被查找到元素的迭代器，如果没找到则返回end()</span></span><br><span class="line">s.<span class="built_in">insert</span>()     <span class="comment">//在集合中插入元素O(logn)</span></span><br><span class="line">s.<span class="built_in">size</span>()     <span class="comment">//集合中元素的数目O(1)</span></span><br></pre></td></tr></table></figure><h1 id="C-标准模板库-STL-之Map映射"><a href="#C-标准模板库-STL-之Map映射" class="headerlink" title="C++标准模板库(STL)之Map映射:"></a>C++标准模板库(STL)之Map映射:</h1><p>Map是STL的一个关联容器，它提供一对一（其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个可能称为该关键字的值）的数据处理能力，由于这个特性，它完成有可能在我们处理一对一数据的时候，在编程上提供快速通道。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">map&lt;string,<span class="type">int</span>&gt; m构建了一个字符串到整数的映射。</span><br><span class="line">m.<span class="built_in">begin</span>()     <span class="comment">//返回指向map头部的迭代器</span></span><br><span class="line">m.<span class="built_in">clear</span>(）     <span class="comment">////删除所有元素     O(n)</span></span><br><span class="line">m.<span class="built_in">count</span>()     <span class="comment">//返回指定元素出现的次数O(logn)</span></span><br><span class="line">m.<span class="built_in">empty</span>()     <span class="comment">//如果map为空则返回true</span></span><br><span class="line">m.<span class="built_in">end</span>()      <span class="comment">//返回指向map末尾的迭代器</span></span><br><span class="line">m.<span class="built_in">erase</span>()     <span class="comment">//删除一个元素</span></span><br><span class="line">m.<span class="built_in">find</span>()      <span class="comment">//查找一个元素</span></span><br><span class="line">m.<span class="built_in">insert</span>()    <span class="comment">// 插入元素        O(logn)</span></span><br><span class="line">m.<span class="built_in">max_size</span>()    <span class="comment">//返回可以容纳的最大元素个数</span></span><br><span class="line">m.<span class="built_in">size</span>()      <span class="comment">//返回map中元素的个数 O(1)</span></span><br><span class="line">m.<span class="built_in">swap</span>()      <span class="comment">//交换两个map</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日刷题记录</title>
      <link href="/%E6%AF%8F%E6%97%A5%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95.html"/>
      <url>/%E6%AF%8F%E6%97%A5%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95.html</url>
      
        <content type="html"><![CDATA[<h2 id="2022年"><a href="#2022年" class="headerlink" title="2022年"></a>2022年</h2><p>$11.6$   洛谷  <a href="https://www.luogu.com.cn/problem/P3467">P3467 PLA-Postering</a>   (单调栈)</p><p>$11.5$  洛谷  <a href="https://www.luogu.com.cn/problem/P1578">P1578 奶牛浴场</a>  （最大子矩阵）</p><p>$10.23$  洛谷  P7910 [CSP-J 2021] 插入排序（记录下标） </p><p>$10.19$ 洛谷 P4653 [CEOI2017] Sure Bet （贪心+双指针）</p><p>$10.18$ UVA 11572 Unique Snowflakes（双指针+map）</p><p>$10.17$  洛谷  P2216​ 理想的正方形（二维单调队列）</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建中的一些坑</title>
      <link href="/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91.html"/>
      <url>/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91.html</url>
      
        <content type="html"><![CDATA[<h2 id="css无法加载"><a href="#css无法加载" class="headerlink" title="css无法加载"></a>css无法加载</h2><p>解决方法：修改_config.yml配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://username.github.io/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><h2 id="博客语言为英文"><a href="#博客语言为英文" class="headerlink" title="博客语言为英文"></a>博客语言为英文</h2><p>解决方法：修改_config.yml配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure><h2 id="报错-Spawn-failed"><a href="#报错-Spawn-failed" class="headerlink" title="报错 Spawn failed"></a>报错 Spawn failed</h2><p>解决办法：依次输入以下命令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">rm</span> <span class="string">-rf</span> <span class="string">.deploy_git/</span></span><br><span class="line"></span><br><span class="line"><span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">core.autocrlf</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">d</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>建站小记</title>
      <link href="/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0.html"/>
      <url>/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<p>2020年搭了一个博客，后来电脑重装系统，于是把相关文件备份了一份。</p><p>博客迁移的时候发现_config.yml被删了，脑子一抽把github上的仓库删了又重新开了一个。</p><p>折腾了三天总算是建好了。</p><p>参考：<a href="https://xxxpt.blog.csdn.net/article/details/102557949">https://xxxpt.blog.csdn.net/article/details/102557949</a></p><p>update on 22.8.3： 换了一台游匣G15，这次迁移成功了^_^</p><p>$$ 「路漫漫其修远兮，吾将上下而求索。」 $$</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
